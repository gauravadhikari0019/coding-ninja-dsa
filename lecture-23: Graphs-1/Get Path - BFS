import java.util.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
public class Solution {
	
	public static void main(String[] args)  throws NumberFormatException, IOException{
        /* Write Your Code Here
		 * Complete the Rest of the Program
		 * You have to take input and print the output yourself
		 */
        
        Scanner sc=new Scanner(System.in);
        int v=sc.nextInt();
        int e=sc.nextInt();
        int [][] m=new int[v][v];
        for(int i=0;i<e;i++){
            int v1=sc.nextInt();
            int v2=sc.nextInt();
            m[v1][v2]=1;
            m[v2][v1]=1;
        }
        int s=sc.nextInt();
        int end=sc.nextInt();
        boolean visited[] = new boolean[v];
        findPathBFS(m,s,end);
	}
    
    public static void findPathBFS(int [][] m,int sv,int e){
        if(sv==e){
            return;
        }

        boolean [] visited= new boolean[m.length];
        Queue<Integer> q=new LinkedList<>();
        q.add(sv);
        visited[sv]=true;
        HashMap<Integer,Integer> map = new HashMap<>();
        while (!q.isEmpty()){
            int v=q.poll();
            for (int i = 0; i < m.length; i++) {
                if(m[v][i]==1 && !visited[i]){
                    map.put(i,v);
                    visited[i]=true;
                    q.add(i);
                    if(i==e)
                        break;
                }
            }
            
            if(map.containsKey(e))
                break;
        }
        if(map.containsKey(e)){
            int key=e;
            System.out.print(key+" ");
            while (map.containsKey(key)){
                int value=map.get(key);
                System.out.print(value+" ");
                key=value;
            }
        }
     }
}
